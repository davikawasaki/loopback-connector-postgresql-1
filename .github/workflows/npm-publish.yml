# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 8
      - run: npm install
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: 'latest'
          postgresql db: 'test'
          postgresql port: 4656
          postgresql user: 'postgres'
          postgresql password: 'postgres'
      - name: Wait / Sleep
        uses: jakejarvis/wait-action@v0.1.0
        with:
          time: '10s'
      - name: Collect Docker Logs
        uses: jwalton/gh-docker-logs@v1.0.0
      - name: Check running containers
        run: docker ps -a
      - run: POSTGRESQL_HOST=localhost POSTGRESQL_PORT=4656 POSTGRESQL_USER=postgres POSTGRESQL_PASSWORD=postgres POSTGRESQL_DATABASE=test npm test
      - name: Upload node modules artifact
        uses: actions/upload-artifact@v2
        with:
          # Artifact name
          name: node_modules # optional
          # A file, directory or wildcard pattern that describes what to upload
          path: node_modules/

  #publish-npm:
    #needs: test
    #runs-on: ubuntu-latest
    #steps:
      #- uses: actions/checkout@v2
      #- uses: actions/setup-node@v1
        #with:
          #node-version: 8
          #registry-url: https://registry.npmjs.org/
      #- run: npm ci
      #- run: npm publish
        #env:
          #NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  publish-gpr:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 8
          registry-url: https://npm.pkg.github.com/
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
